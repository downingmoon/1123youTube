<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/security"
    xmlns:beans="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.springframework.org/schema/security http://www.springframework.org/schema/security/spring-security.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-4.3.xsd">
	
	<beans:bean id="bcryptPasswordEncoder"
			class="org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder"/>

	<http use-expressions="true"> <!-- access에 hasAnyRole 표현식 사용가능하게 하는것 -->
		<!-- in Memory 방식 -->
		<intercept-url pattern="/client/**" access="permitAll" />
		<intercept-url pattern="/admin/**" access="hasRole('ROLE_ADM')" />
		
		<form-login login-page="/client/login/loginForm" 
			default-target-url="/client/list" 
			authentication-failure-url="/admin/loginForm?error=1" 
			username-parameter="username" 
			password-parameter="password" /> 
		
		<logout logout-url="/logout" logout-success-url="/"
			invalidate-session="true" />
		
		<access-denied-handler error-page="/error/accessDenied" />
		
		<csrf disabled="true"/>
	</http> 
	
	<!-- provider, memory에 계속 올라가있기 때문에 in memory 방식임, 값을 변경하려면 서버를 restart 해야한다. --> 
	<authentication-manager> 
		<authentication-provider>
			<jdbc-user-service
				data-source-ref="dataSource"
				role-prefix="ROLE_"
				users-by-username-query=
				"select
					u_id as username,
					u_pw as password,
					1 as enabled
				from yf_user where u_id = ?"
				authorities-by-username-query=
				"select
					u_id as username,
					u_auth as authority
				from yf_user where u_id = ?"
				/>
				<password-encoder hash="bcrypt"/>
		</authentication-provider>
	</authentication-manager>
	
</beans:beans>
